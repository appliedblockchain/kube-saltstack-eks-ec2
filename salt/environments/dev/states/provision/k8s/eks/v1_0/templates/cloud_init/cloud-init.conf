#!/usr/bin/env bash

hostname {{instance_configs.ec2.name}}

useradd -m -s $(which bash) {{ instance_configs.ec2.key_name }}
adduser {{ instance_configs.ec2.key_name }} sudo
echo '{{ instance_configs.ec2.key_name }} ALL=(ALL) NOPASSWD:ALL' | EDITOR='tee -a' visudo

mkdir /home/{{ instance_configs.ec2.key_name }}/.ssh
chown -R {{ instance_configs.ec2.key_name }}:{{ instance_configs.ec2.key_name }} /home/{{ instance_configs.ec2.key_name }}/.ssh
chmod 0700 /home/{{ instance_configs.ec2.key_name }}/.ssh
chmod 0600 /home/{{ instance_configs.ec2.key_name }}/.ssh/authorized_keys

echo "{{ instance_configs.ec2.public_key }} " > /home/{{ instance_configs.ec2.key_name }}/.ssh/authorized_keys


# Install aws-iam-authenticator
authenticator_binary=aws-iam-authenticator
curl -s -o /tmp/$authenticator_binary https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/$authenticator_binary
curl -o $authenticator_binary.sha256 https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/$authenticator_binary.sha256
checksum=$(openssl sha1 -sha256 $authenticator_binary | awk '{print $2}')
real_checksum=$(cat $authenticator_binary.sha256 | awk '{print $1}')
if [ "$checksum" -ne "$real_checksum" ]; then
    echo "Invalid $authenticator_binary checksum"
    exit 1
fi
chmod +x /tmp/$authenticator_binary
mv /tmp/$authenticator_binary /usr/bin/$authenticator_binary


# Install Kubectl
snap install kubectl --classic
